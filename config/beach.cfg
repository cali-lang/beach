####################################################################
# Copyright 2015 Austin Lehman
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
# http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
####################################################################

####################################################################
# Basic Configuration
####################################################################

# Port number to serve content.
port = 8080

# If root (/) isn't defined, display getting started page?
# For production systems this should be set to false. If set to 
# true then handlers will be added. The index page can be reached 
# at / if no index is already defined and at /startPage.
showGettingStarted = true

# Logging locations.
logFile = log/beach.log
accessLogFile = log/access.log

# HTTPS Certificate and Password. Set these to launch service over 
# SSL. If using sessions, these are required.
#
# Modify password and run the following command to generate 
# a self-signed cert. Make sure to also change httpsCertPassword 
# to the password you chose.
# 
# keytool -genkey -keyalg RSA -alias selfsigned -keystore config/testkeystore.jks -storepass password -validity 360 -keysize 2048
# httpsCertFile = config/testkeystore.jks
# httpsCertPassword = password
httpsCertFile = 
httpsCertPassword = 

# Mime type list.
# Format is fileExtension -> Content-Type
mimeType = avi -> video/avi
mimeType = bmp -> image/bmp
mimeType = bz2 -> application/x-bzip2
mimeType = css -> text/css
mimeType = dtd -> application/xml-dtd
mimeType = es -> application/ecmascript 
mimeType = gif -> image/gif
mimeType = gz -> application/x-gzip
mimeType = hqx -> application/mac-binhex40
mimeType = html -> text/html
mimeType = jar -> application/java-archive
mimeType = jpg -> image/jpeg
mimeType = js -> application/x-javascript
mimeType = midi -> audio/x-midi
mimeType = mp3 -> audio/mpeg
mimeType = mpeg -> video/mpeg
mimeType = ogg -> audio/vorbis
mimeType = pdf -> application/pdf
mimeType = pl -> application/x-perl
mimeType = png -> image/png
mimeType = potx -> application/vnd.openxmlformats-officedocument.presentationml.template
mimeType = ppsx -> application/vnd.openxmlformats-officedocument.presentationml.slideshow
mimeType = ps -> application/postscript
mimeType = qt -> video/quicktime
mimeType = ra -> audio/x-pn-realaudio
mimeType = ram -> audio/x-pn-realaudio
mimeType = rdf -> application/rdf
mimeType = rtf -> application/rtf
mimeType = sgml -> text/sgml
mimeType = sldx -> application/vnd.openxmlformats-officedocument.presentationml.slide
mimeType = svg -> image/svg+xml
mimeType = swf -> application/x-shockwave-flash
mimeType = tar.gz -> application/x-tar
mimeType = tgz -> application/x-tar
mimeType = tiff -> image/tiff
mimeType = tsv -> text/tab-separated-values
mimeType = txt -> text/plain
mimeType = wav -> audio/wav
mimeType = xml -> application/xml
mimeType = zip -> application/zip


####################################################################
# Session Configuration
####################################################################

# Toggles the use of sessions based on cookies. Note sessions 
# require HTTPS server.
useSessions = false

# This is the number of initial sessions to hold in memory. When a 
# session is first created it's put into the pre-session queue and a 
# cookie is sent with the response header. If you call isNew() on the 
# returned session ant the result is true then it exists in the 
# pre-session queue. Once the client makes a second call with the set 
# cookie the session will be removed from this queue and set as a 
# permanent session and stored.
preSessionQueueSize = 100

# The amount of time the browser should retain the cookie. If set to 
# 0 or less then there is no expiration set in the cookie. Note that 
# this setting only applies to the cookie sent to the browser and 
# has no impact on how long session information is stored by the server.
defaultSessionTimeoutSeconds = 600

# The cali-lang module to use for session handling. You can create 
# your own session manager. The default one uses the data/sessions 
# directory to store session date. Whatever module is listed 
# here will be dynamically loaded by the application. Only 
# applicable if useSessions is set to true.
sessionModule = net.beach.beachSession

# The class name for the session manager. This class will be 
# instantiated and used to manage all the sessions.
sessionManager = sessionManager
