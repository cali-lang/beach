/*
 * Copyright 2015 Austin Lehman
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

include net.html.caliBs.bsPages;
include net.html.caliBs.bsComponents;

include net.beach.beachPage;

/** 
 * Http beachError extends bsPage and implements various HTTP error pages.
 */
class beachError : beachPage
{
	/**
	 * Constructor takes the response cod and message and builds the 
	 * error page.
	 * @p respCode is a int with the HTTP response code. (ie 404, 500)
	 * @p message is a string with the error message.
	 */
	public beachError(int respCode, string message)
	{
		// Call parent constructor.
		this.beachPage("HTTP Error " + respCode);
		
		titleRow = new _div();
		logoDiv = new _div(new _img('beach/img/favicon-96x96.png', 'Beach Logo', 64, 64));
		logoDiv.set("style", "float: left;");
		titleDiv = new _div(new _h1(new _text('' + respCode)));
		titleRow.add(logoDiv).add(titleDiv);
		
		msgRow = new _div();
		msgRow.set("style", "clear: both;");
		msgRow.add(new _p(message));
		
		// Create a new bootstrap container div (defined in bsComponents).
		ctr = new bsContainer();
		ctr
			.br()
			.add((new bsJumbo())
				.add(titleRow)
				.add(msgRow)
			)
		;
		
		// Add the container to the body of the page.
		this.body.add(ctr);
	}
}

/**
 * Class error404 extends beachError and implements 404 error page.
 */
class error404 : beachError
{
	/**
	 * Default constructor takes the requested resource and builds the error page.
	 * @p reqResource is a string with the requested resource.
	 */
	public error404(string reqResource)
	{
		this.beachError(404, "Oops! Requested resource '" + reqResource + "' not found!");
	}
}

/**
 * Class error500 extends beachError and implements 500 error page.
 */
class error500 : beachError
{
	/**
	 * Default constructor builds the error page.
	 */
	public error500()
	{
		this.beachError(500, "Oops! Internal server error!");
	}
}
